// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`tsc > Should have the correct TypeScript errors 1`] = `
",src/01-basics/03-typing-components.problem.tsx(4,29): error TS18046: 'props' is of type 'unknown'.
src/01-basics/05-typing-children.problem.tsx(4,46): error TS2322: Type 'unknown' is not assignable to type 'ReactNode'.
src/01-basics/06-using-html-props.problem.tsx(4,3): error TS2339: Property 'onClick' does not exist on type '{ className: string; children: ReactNode; }'.
src/01-basics/08-typing-onclick-handlers.problem.tsx(8,47): error TS2339: Property 'onChange' does not exist on type 'ButtonProps'.
src/02-basic-hooks/09-use-state.problem.ts(18,15): error TS2345: Argument of type '{ id: number; name: string; }' is not assignable to parameter of type 'SetStateAction<undefined>'.
  Type '{ id: number; name: string; }' provides no match for the signature '(prevState: undefined): undefined'.
src/02-basic-hooks/09-use-state.problem.ts(22,23): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/02-basic-hooks/10-use-effect.problem.ts(6,7): error TS2322: Type 'Timeout' is not assignable to type 'void | Destructor'.
src/02-basic-hooks/11-use-callback.problem.tsx(5,31): error TS2344: Type 'string' does not satisfy the constraint 'Function'.
src/02-basic-hooks/11-use-callback.problem.tsx(6,6): error TS7006: Parameter 'buttonName' implicitly has an 'any' type.
src/02-basic-hooks/11-use-callback.problem.tsx(12,22): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/02-basic-hooks/11-use-callback.problem.tsx(16,30): error TS2349: This expression is not callable.
  Type 'String' has no call signatures.
src/02-basic-hooks/11-use-callback.problem.tsx(17,30): error TS2349: This expression is not callable.
  Type 'String' has no call signatures.
src/02-basic-hooks/11-use-callback.problem.tsx(18,30): error TS2349: This expression is not callable.
  Type 'String' has no call signatures.
src/02-basic-hooks/14-use-ref-basics.problem.tsx(7,5): error TS2322: Type '\\"Random value!\\"' is not assignable to type 'undefined'.
src/02-basic-hooks/15-element-refs.explainer.tsx(19,7): error TS2322: Type 'undefined' is not assignable to type 'HTMLDivElement | null'.
src/02-basic-hooks/16-use-ref-with-elements.problem.tsx(6,15): error TS2322: Type 'MutableRefObject<HTMLDivElement | undefined>' is not assignable to type 'LegacyRef<HTMLDivElement> | undefined'.
  Type 'MutableRefObject<HTMLDivElement | undefined>' is not assignable to type 'RefObject<HTMLDivElement>'.
    Types of property 'current' are incompatible.
      Type 'HTMLDivElement | undefined' is not assignable to type 'HTMLDivElement | null'.
        Type 'undefined' is not assignable to type 'HTMLDivElement | null'.
src/02-basic-hooks/17-why-is-my-ref-readonly.problem.tsx(7,7): error TS2540: Cannot assign to 'current' because it is a read-only property.
src/02-basic-hooks/18-use-reducer.problem.ts(5,11): error TS18046: 'action' is of type 'unknown'.
src/02-basic-hooks/18-use-reducer.problem.ts(7,23): error TS18046: 'state' is of type 'unknown'.
src/02-basic-hooks/18-use-reducer.problem.ts(7,37): error TS18046: 'action' is of type 'unknown'.
src/02-basic-hooks/18-use-reducer.problem.ts(9,23): error TS18046: 'state' is of type 'unknown'.
src/02-basic-hooks/18-use-reducer.problem.ts(9,37): error TS18046: 'action' is of type 'unknown'.
src/02-basic-hooks/18-use-reducer.problem.ts(17,22): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/02-basic-hooks/18-use-reducer.problem.ts(21,1): error TS2578: Unused '@ts-expect-error' directive.
src/02-basic-hooks/18-use-reducer.problem.ts(24,1): error TS2578: Unused '@ts-expect-error' directive.
src/02-basic-hooks/18-use-reducer.problem.ts(27,1): error TS2578: Unused '@ts-expect-error' directive.
src/03-custom-hooks/19-typing-custom-hooks.problem.ts(4,23): error TS7006: Parameter 'defaultId' implicitly has an 'any' type.
src/03-custom-hooks/19-typing-custom-hooks.problem.ts(10,22): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/20-tuple-return-type.problem.ts(13,10): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/20-tuple-return-type.problem.ts(14,10): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/21-generic-hooks.problem.ts(16,10): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/21-generic-hooks.problem.ts(18,5): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/21-generic-hooks.problem.ts(28,10): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/21-generic-hooks.problem.ts(29,10): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/22-generic-localstorage-hook.problem.ts(15,30): error TS2558: Expected 0 type arguments, but got 1.
src/03-custom-hooks/22-generic-localstorage-hook.problem.ts(22,24): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/22-generic-localstorage-hook.problem.ts(28,5): error TS2578: Unused '@ts-expect-error' directive.
src/03-custom-hooks/23-generic-localstorage-hook-with-zod.problem.tsx(28,24): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/23-generic-localstorage-hook-with-zod.problem.tsx(34,5): error TS2578: Unused '@ts-expect-error' directive.
src/03-custom-hooks/24-unions-in-usestate.problem.tsx(49,3): error TS2578: Unused '@ts-expect-error' directive.
src/03-custom-hooks/24-unions-in-usestate.problem.tsx(66,22): error TS2344: Type 'false' does not satisfy the constraint 'true'.
src/03-custom-hooks/25-discriminated-unions-in-usestate.problem.tsx(37,3): error TS2578: Unused '@ts-expect-error' directive.
src/03-custom-hooks/25-discriminated-unions-in-usestate.problem.tsx(40,3): error TS2578: Unused '@ts-expect-error' directive.
src/03-custom-hooks/25-discriminated-unions-in-usestate.problem.tsx(43,3): error TS2578: Unused '@ts-expect-error' directive.
src/03-custom-hooks/27-discriminated-tuples-from-custom-hooks.problem.tsx(31,25): error TS18048: 'value' is possibly 'undefined'.
src/03-custom-hooks/27-discriminated-tuples-from-custom-hooks.problem.tsx(31,31): error TS2339: Property 'message' does not exist on type 'Error | { title: string; }'.
  Property 'message' does not exist on type '{ title: string; }'.
src/03-custom-hooks/27-discriminated-tuples-from-custom-hooks.problem.tsx(34,16): error TS18048: 'value' is possibly 'undefined'.
src/03-custom-hooks/27-discriminated-tuples-from-custom-hooks.problem.tsx(34,22): error TS2339: Property 'title' does not exist on type 'Error | { title: string; }'.
  Property 'title' does not exist on type 'Error'.
src/04-advanced-props/33-discriminated-union-with-other-props.problem.tsx(24,9): error TS2322: Type '{ buttonColor: string; variant: \\"no-title\\"; title: string; }' is not assignable to type 'IntrinsicAttributes & ModalProps'.
  Property 'buttonColor' does not exist on type 'IntrinsicAttributes & { variant: \\"no-title\\"; }'.
src/04-advanced-props/33-discriminated-union-with-other-props.problem.tsx(26,9): error TS2578: Unused '@ts-expect-error' directive.
src/04-advanced-props/33-discriminated-union-with-other-props.problem.tsx(29,44): error TS2322: Type '{ variant: \\"title\\"; title: string; buttonColor: string; }' is not assignable to type 'IntrinsicAttributes & ModalProps'.
  Property 'buttonColor' does not exist on type 'IntrinsicAttributes & { variant: \\"title\\"; title: string; }'.
src/04-advanced-props/34-either-all-these-props-or-none.problem.tsx(30,8): error TS2578: Unused '@ts-expect-error' directive.
src/04-advanced-props/34-either-all-these-props-or-none.problem.tsx(33,8): error TS2578: Unused '@ts-expect-error' directive.
src/04-advanced-props/35-generic-props.problem.tsx(38,9): error TS2578: Unused '@ts-expect-error' directive.
src/04-advanced-props/35-generic-props.problem.tsx(50,17): error TS2578: Unused '@ts-expect-error' directive.
src/05-advanced/44-as-prop.solution.1.tsx(18,5): error TS2322: Type '{ as: \\"div\\"; href: string; }' is not assignable to type 'IntrinsicAttributes & AsProps'.
  Property 'href' does not exist on type 'IntrinsicAttributes & { as: \\"div\\"; } & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'. Did you mean 'ref'?
src/05-advanced/45-as-prop-with-custom-components.problem.tsx(12,35): error TS2322: Type '{ as: (props: { href: string; children?: ReactNode; }) => Element; href: string; }' is not assignable to type 'IntrinsicAttributes & { as: any; }'.
  Property 'href' does not exist on type 'IntrinsicAttributes & { as: any; }'.
,"
`;

exports[`vitest > Should have the correct Vitest errors 1`] = `
{
  "success": false,
  "testResults": [
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/01-react-in-typescript.explainer.tsx",
      "name": "src/01-basics/01-react-in-typescript.explainer.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/02-typescript-in-react-frameworks.explainer.ts",
      "name": "src/01-basics/02-typescript-in-react-frameworks.explainer.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/03-typing-components.problem.tsx",
      "name": "src/01-basics/03-typing-components.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/03-typing-components.solution.1.tsx",
      "name": "src/01-basics/03-typing-components.solution.1.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/03-typing-components.solution.2.tsx",
      "name": "src/01-basics/03-typing-components.solution.2.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/03-typing-components.solution.3.tsx",
      "name": "src/01-basics/03-typing-components.solution.3.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/03-typing-components.solution.4.tsx",
      "name": "src/01-basics/03-typing-components.solution.4.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/03-typing-components.solution.5.tsx",
      "name": "src/01-basics/03-typing-components.solution.5.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/04-understanding-jsx-element.explainer.tsx",
      "name": "src/01-basics/04-understanding-jsx-element.explainer.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/05-typing-children.problem.tsx",
      "name": "src/01-basics/05-typing-children.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/05-typing-children.solution.tsx",
      "name": "src/01-basics/05-typing-children.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/06-using-html-props.problem.tsx",
      "name": "src/01-basics/06-using-html-props.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/06-using-html-props.solution.1.tsx",
      "name": "src/01-basics/06-using-html-props.solution.1.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/06-using-html-props.solution.2.tsx",
      "name": "src/01-basics/06-using-html-props.solution.2.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/06-using-html-props.solution.3.tsx",
      "name": "src/01-basics/06-using-html-props.solution.3.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/07-understanding-jsx-element-type.explainer.ts",
      "name": "src/01-basics/07-understanding-jsx-element-type.explainer.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/08-typing-onclick-handlers.problem.tsx",
      "name": "src/01-basics/08-typing-onclick-handlers.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/01-basics/08-typing-onclick-handlers.solution.tsx",
      "name": "src/01-basics/08-typing-onclick-handlers.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/09-use-state.problem.ts",
      "name": "src/02-basic-hooks/09-use-state.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/09-use-state.solution.1.ts",
      "name": "src/02-basic-hooks/09-use-state.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/09-use-state.solution.2.ts",
      "name": "src/02-basic-hooks/09-use-state.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/10-use-effect.problem.ts",
      "name": "src/02-basic-hooks/10-use-effect.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/10-use-effect.solution.ts",
      "name": "src/02-basic-hooks/10-use-effect.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/11-use-callback.problem.tsx",
      "name": "src/02-basic-hooks/11-use-callback.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/11-use-callback.solution.tsx",
      "name": "src/02-basic-hooks/11-use-callback.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/12-use-memo.problem.tsx",
      "name": "src/02-basic-hooks/12-use-memo.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/13-use-context.problem.tsx",
      "name": "src/02-basic-hooks/13-use-context.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/14-use-ref-basics.problem.tsx",
      "name": "src/02-basic-hooks/14-use-ref-basics.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/14-use-ref-basics.solution.tsx",
      "name": "src/02-basic-hooks/14-use-ref-basics.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "React is not defined",
      "name": "src/02-basic-hooks/15-element-refs.explainer.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/16-use-ref-with-elements.problem.tsx",
      "name": "src/02-basic-hooks/16-use-ref-with-elements.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/16-use-ref-with-elements.solution.tsx",
      "name": "src/02-basic-hooks/16-use-ref-with-elements.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/17-why-is-my-ref-readonly.problem.tsx",
      "name": "src/02-basic-hooks/17-why-is-my-ref-readonly.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/02-basic-hooks/17-why-is-my-ref-readonly.solution.tsx",
      "name": "src/02-basic-hooks/17-why-is-my-ref-readonly.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useReducer')",
      "name": "src/02-basic-hooks/18-use-reducer.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useReducer')",
      "name": "src/02-basic-hooks/18-use-reducer.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useReducer')",
      "name": "src/02-basic-hooks/18-use-reducer.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/19-typing-custom-hooks.problem.ts",
      "name": "src/03-custom-hooks/19-typing-custom-hooks.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/19-typing-custom-hooks.solution.1.ts",
      "name": "src/03-custom-hooks/19-typing-custom-hooks.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/19-typing-custom-hooks.solution.2.ts",
      "name": "src/03-custom-hooks/19-typing-custom-hooks.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/19-typing-custom-hooks.solution.3.ts",
      "name": "src/03-custom-hooks/19-typing-custom-hooks.solution.3.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/20-tuple-return-type.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/20-tuple-return-type.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/20-tuple-return-type.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/21-generic-hooks.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/21-generic-hooks.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/21-generic-hooks.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/21-generic-hooks.solution.3.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/21-generic-hooks.solution.4.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "Cannot read properties of null (reading 'useState')",
      "name": "src/03-custom-hooks/21-generic-hooks.solution.5.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should let you set and get values",
          "status": "passed",
          "title": "Should let you set and get values",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should not let you set a value that is not the same type as the type argument passed",
          "status": "passed",
          "title": "Should not let you set a value that is not the same type as the type argument passed",
        },
      ],
      "message": "",
      "name": "src/03-custom-hooks/22-generic-localstorage-hook.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should let you set and get values",
          "status": "passed",
          "title": "Should let you set and get values",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should not let you set a value that is not the same type as the type argument passed",
          "status": "passed",
          "title": "Should not let you set a value that is not the same type as the type argument passed",
        },
      ],
      "message": "",
      "name": "src/03-custom-hooks/22-generic-localstorage-hook.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should let you set and get values",
          "status": "passed",
          "title": "Should let you set and get values",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should not let you set a value that is not the same type as the type argument passed",
          "status": "passed",
          "title": "Should not let you set a value that is not the same type as the type argument passed",
        },
      ],
      "message": "",
      "name": "src/03-custom-hooks/23-generic-localstorage-hook-with-zod.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should let you set and get values",
          "status": "passed",
          "title": "Should let you set and get values",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should not let you set a value that is not the same type as the type argument passed",
          "status": "passed",
          "title": "Should not let you set a value that is not the same type as the type argument passed",
        },
      ],
      "message": "",
      "name": "src/03-custom-hooks/23-generic-localstorage-hook-with-zod.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/24-unions-in-usestate.problem.tsx",
      "name": "src/03-custom-hooks/24-unions-in-usestate.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/24-unions-in-usestate.solution.tsx",
      "name": "src/03-custom-hooks/24-unions-in-usestate.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/25-discriminated-unions-in-usestate.problem.tsx",
      "name": "src/03-custom-hooks/25-discriminated-unions-in-usestate.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/25-discriminated-unions-in-usestate.solution.tsx",
      "name": "src/03-custom-hooks/25-discriminated-unions-in-usestate.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/26-discriminated-union-returns-from-custom-hooks.problem.ts",
      "name": "src/03-custom-hooks/26-discriminated-union-returns-from-custom-hooks.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/27-discriminated-tuples-from-custom-hooks.problem.tsx",
      "name": "src/03-custom-hooks/27-discriminated-tuples-from-custom-hooks.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/27-discriminated-tuples-from-custom-hooks.solution.tsx",
      "name": "src/03-custom-hooks/27-discriminated-tuples-from-custom-hooks.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/03-custom-hooks/28-hooks-from-external-libraries.problem.ts",
      "name": "src/03-custom-hooks/28-hooks-from-external-libraries.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/29-understanding-react-type-helpers.explainer.ts",
      "name": "src/04-advanced-props/29-understanding-react-type-helpers.explainer.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/30-discriminated-union-props.problem.tsx",
      "name": "src/04-advanced-props/30-discriminated-union-props.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/31-destructuring-discriminated-unions.problem.tsx",
      "name": "src/04-advanced-props/31-destructuring-discriminated-unions.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/32-discriminated-union-props-with-booleans.problem.tsx",
      "name": "src/04-advanced-props/32-discriminated-union-props-with-booleans.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/33-discriminated-union-with-other-props.problem.tsx",
      "name": "src/04-advanced-props/33-discriminated-union-with-other-props.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/33-discriminated-union-with-other-props.solution.tsx",
      "name": "src/04-advanced-props/33-discriminated-union-with-other-props.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/34-either-all-these-props-or-none.problem.tsx",
      "name": "src/04-advanced-props/34-either-all-these-props-or-none.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/34-either-all-these-props-or-none.solution.1.tsx",
      "name": "src/04-advanced-props/34-either-all-these-props-or-none.solution.1.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/34-either-all-these-props-or-none.solution.2.tsx",
      "name": "src/04-advanced-props/34-either-all-these-props-or-none.solution.2.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/34-either-all-these-props-or-none.solution.3.tsx",
      "name": "src/04-advanced-props/34-either-all-these-props-or-none.solution.3.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/35-generic-props.problem.tsx",
      "name": "src/04-advanced-props/35-generic-props.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/35-generic-props.solution.tsx",
      "name": "src/04-advanced-props/35-generic-props.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/37-generics-vs-discriminated-unions.problem.tsx",
      "name": "src/04-advanced-props/37-generics-vs-discriminated-unions.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/04-advanced-props/38-variants-with-classnames.problem.tsx",
      "name": "src/04-advanced-props/38-variants-with-classnames.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/39-generic-context.problem.tsx",
      "name": "src/05-advanced/39-generic-context.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/40-extracting-props-from-custom-components.problem.tsx",
      "name": "src/05-advanced/40-extracting-props-from-custom-components.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/41-compound-components.problem.tsx",
      "name": "src/05-advanced/41-compound-components.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/42-forward-ref.problem.tsx",
      "name": "src/05-advanced/42-forward-ref.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/43-hoc-problem.tsx",
      "name": "src/05-advanced/43-hoc-problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "React is not defined",
      "name": "src/05-advanced/44-as-prop.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "React is not defined",
      "name": "src/05-advanced/44-as-prop.solution.1.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "React is not defined",
      "name": "src/05-advanced/44-as-prop.solution.2.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/45-as-prop-with-custom-components.problem.tsx",
      "name": "src/05-advanced/45-as-prop-with-custom-components.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/45-as-prop-with-custom-components.solution.tsx",
      "name": "src/05-advanced/45-as-prop-with-custom-components.solution.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/46-render-props.problem.tsx",
      "name": "src/05-advanced/46-render-props.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/05-advanced/47-render-props-with-generics.problem.tsx",
      "name": "src/05-advanced/47-render-props-with-generics.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/06-external-libraries/48-react-hook-form.problem.tsx",
      "name": "src/06-external-libraries/48-react-hook-form.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/06-external-libraries/49-react-query.problem.tsx",
      "name": "src/06-external-libraries/49-react-query.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/06-external-libraries/50-redux-toolkit.problem.tsx",
      "name": "src/06-external-libraries/50-redux-toolkit.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/06-external-libraries/51-zustand.problem.tsx",
      "name": "src/06-external-libraries/51-zustand.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/06-external-libraries/52-reusable-form-library-with-zod.problem.tsx",
      "name": "src/06-external-libraries/52-reusable-form-library-with-zod.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/07-frags/53-passing-react-components-vs-passing-react-nodes.problem.tsx",
      "name": "src/07-frags/53-passing-react-components-vs-passing-react-nodes.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/07-frags/54-record-of-components-with-same-props.problem.tsx",
      "name": "src/07-frags/54-record-of-components-with-same-props.problem.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/07-frags/55-strongly-typing-children.explainer.tsx",
      "name": "src/07-frags/55-strongly-typing-children.explainer.tsx",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/07-frags/56-understand-react-namespace-export.explainer.ts",
      "name": "src/07-frags/56-understand-react-namespace-export.explainer.ts",
      "status": "passed",
    },
  ],
}
`;
